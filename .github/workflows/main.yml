name: main-workflow
on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches: ["main", "release"]

jobs:
  build-and-test-backend:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}
    defaults:
      run:
        working-directory: src

    # Service containers to run with job
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgis/postgis
        # Provide env for postgres to set-up database
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: graphweaver
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v3
        env:
          cache-name: cache-pnpm-modules
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-

      - uses: pnpm/action-setup@v2.2.4
        with:
          version: 6.32.3
          run_install: false

      - uses: actions/setup-node@v2
        with:
          node-version: "14"
          cache: "pnpm"
          cache-dependency-path: src/pnpm-lock.yaml

      - run: pnpm i
      - run: pnpm lint
      - run: pnpm -r build --filter "@exogee/backend-app-launcher"
      - run: pnpm migrate
      - run: pnpm test
    env:
      DATABASE_HOST: localhost
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: postgres
      DATABASE_PORT: 5432
      DATABASE_NAME: graphweaver

  build-and-test-frontend-web-app:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}
    defaults:
      run:
        working-directory: src/apps/web-app

    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v3
        env:
          cache-name: cache-pnpm-modules
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-

      - uses: pnpm/action-setup@v2.2.4
        with:
          version: 6.32.3
          run_install: false

      - uses: actions/setup-node@v2
        with:
          node-version: "14"
          cache: "pnpm"
          cache-dependency-path: src/pnpm-lock.yaml

      - run: pnpm i
      - run: pnpm -r build --filter "@exogee/backend-app-launcher"

      - run: pnpm build:tsc
        # - name: Run Tests # TODO: uncomment when tests are added to any frontend package
        # run: pnpm test
        env:
          PORT: 8000
          VITE_GRAPHWEAVER_URI: http://localhost:3000/graphql/v1
