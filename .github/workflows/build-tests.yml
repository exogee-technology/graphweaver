name: Build Tests

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build-tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: src

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - uses: actions/cache@v3
        env:
          cache-name: cache-pnpm-modules
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-

      - uses: pnpm/action-setup@v2.2.4
        with:
          version: 8.6.9

      - uses: actions/setup-node@v3
        with:
          node-version: "20"
          cache: "pnpm"
          cache-dependency-path: src/pnpm-lock.yaml

      - name: Install dependencies
        run: pnpm i

      - name: Build CLI tool
        run: pnpm build

      - name: Build
        working-directory: src/packages/end-to-end
        timeout-minutes: 2
        run: pnpm test-build

      - name: Check for native modules in app package for Postgres-based project
        working-directory: src/packages/end-to-end/app
        run: |
          for package in $(find node_modules -type f -name "*.node" | cut -d'/' -f3 | cut -d'@' -f1); do pnpm why -r -P $package >> ~/.native.check.txt; done
          if [[ -s ~/.native.check.txt ]]; then
            echo "Dependencies containing native modules were found in the app package. See output below:"
            cat ~/.native.check.txt
            exit 1
          else
            echo "No native modules found in app package, continuing."
          fi

      - name: Intentionally add native module
        working-directory: src/packages/end-to-end/app
        run: |
          pnpm add sqlite3 --ignore-workspace --no-lockfile

      - name: Ensure test is picking up native module as expected
        working-directory: src/packages/end-to-end/app
        run: |
          for package in $(find node_modules -type f -name "*.node" | cut -d'/' -f3 | cut -d'@' -f1); do pnpm why -r -P $package >> ~/.native.check2.txt; done
          if [[ -s ~/.native.check2.txt ]]; then
            echo "Dependencies containing native modules were found in the app package. Test passed."
          else
            echo "No native modules found in app package - test failed."
            exit 1
          fi
      
      - name: Repeat native module check for SQLite-based project
        working-directory: src/packages/end-to-end
        timeout-minutes: 2
        run: |
          pnpm import-database-sqlite
          cd app
          for package in $(find node_modules -type f -name "*.node" | cut -d'/' -f3 | cut -d'@' -f1); do pnpm why -r -P $package >> ~/.native.check.txt; done
          if [[ -s ~/.native.check.txt ]]; then
            echo "Dependencies containing native modules were found in the app package. See output below:"
            cat ~/.native.check.txt
            exit 1
          else
            echo "No native modules found in app package, check succeeded."
          fi