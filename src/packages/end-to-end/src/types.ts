/* eslint-disable */
/*
 * This file is auto-generated by Graphweaver.
 * Please do not edit it directly.
 */
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
export type MakeEmpty<T extends { [key: string]: unknown }, K extends keyof T> = {
	[_ in K]?: never;
};
export type Incremental<T> =
	| T
	| { [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
	ID: { input: string; output: string };
	String: { input: string; output: string };
	Boolean: { input: boolean; output: boolean };
	Int: { input: number; output: number };
	Float: { input: number; output: number };
	ISOString: { input: any; output: any };
};

export type AdminUiEntityMetadata = {
	__typename?: 'AdminUiEntityMetadata';
	backendId?: Maybe<Scalars['String']['output']>;
	fields: Array<AdminUiFieldMetadata>;
	name: Scalars['String']['output'];
	summaryField?: Maybe<Scalars['String']['output']>;
};

export type AdminUiEnumMetadata = {
	__typename?: 'AdminUiEnumMetadata';
	name: Scalars['String']['output'];
	values: Array<AdminUiEnumValueMetadata>;
};

export type AdminUiEnumValueMetadata = {
	__typename?: 'AdminUiEnumValueMetadata';
	name: Scalars['String']['output'];
	value: Scalars['String']['output'];
};

export type AdminUiFieldMetadata = {
	__typename?: 'AdminUiFieldMetadata';
	filter?: Maybe<AdminUiFilterMetadata>;
	name: Scalars['String']['output'];
	relatedEntity?: Maybe<Scalars['String']['output']>;
	relationshipType?: Maybe<Scalars['String']['output']>;
	type: Scalars['String']['output'];
};

export type AdminUiFilterMetadata = {
	__typename?: 'AdminUiFilterMetadata';
	type: AdminUiFilterType;
};

export enum AdminUiFilterType {
	DateRange = 'DATE_RANGE',
	Enum = 'ENUM',
	Numeric = 'NUMERIC',
	Relationship = 'RELATIONSHIP',
	Text = 'TEXT',
}

export type AdminUiMetadata = {
	__typename?: 'AdminUiMetadata';
	entities: Array<AdminUiEntityMetadata>;
	enums: Array<AdminUiEnumMetadata>;
};

export type Album = {
	__typename?: 'Album';
	artist?: Maybe<Artist>;
	albumId: Scalars['ID']['output'];
	title: Scalars['String']['output'];
	tracks?: Maybe<Array<Track>>;
};

export type AlbumArtistArgs = {
	filter?: InputMaybe<ArtistsListFilter>;
};

export type AlbumTracksArgs = {
	filter?: InputMaybe<TracksListFilter>;
};

export type AlbumCreateOrUpdateInput = {
	artist?: InputMaybe<ArtistCreateOrUpdateInput>;
	albumId?: InputMaybe<Scalars['ID']['input']>;
	title?: InputMaybe<Scalars['String']['input']>;
	tracks?: InputMaybe<Array<TrackCreateOrUpdateInput>>;
};

export type AlbumInsertInput = {
	artist?: InputMaybe<ArtistCreateOrUpdateInput>;
	title: Scalars['String']['input'];
	tracks?: InputMaybe<Array<TrackCreateOrUpdateInput>>;
};

export type AlbumsCreateOrUpdateManyInput = {
	data: Array<AlbumCreateOrUpdateInput>;
};

export type AlbumsInsertManyInput = {
	data: Array<AlbumInsertInput>;
};

export type AlbumsListFilter = {
	_and?: InputMaybe<Array<AlbumsListFilter>>;
	_not?: InputMaybe<AlbumsListFilter>;
	_or?: InputMaybe<Array<AlbumsListFilter>>;
	artist?: InputMaybe<ArtistsListFilter>;
	albumId?: InputMaybe<Scalars['ID']['input']>;
	albumId_in?: InputMaybe<Array<Scalars['ID']['input']>>;
	albumId_ne?: InputMaybe<Scalars['ID']['input']>;
	albumId_nin?: InputMaybe<Array<Scalars['ID']['input']>>;
	albumId_notnull?: InputMaybe<Scalars['ID']['input']>;
	albumId_null?: InputMaybe<Scalars['ID']['input']>;
	title?: InputMaybe<Scalars['String']['input']>;
	title_ilike?: InputMaybe<Scalars['String']['input']>;
	title_in?: InputMaybe<Array<Scalars['String']['input']>>;
	title_like?: InputMaybe<Scalars['String']['input']>;
	title_ne?: InputMaybe<Scalars['String']['input']>;
	title_nin?: InputMaybe<Array<Scalars['String']['input']>>;
	title_notnull?: InputMaybe<Scalars['String']['input']>;
	title_null?: InputMaybe<Scalars['String']['input']>;
	tracks?: InputMaybe<TracksListFilter>;
};

export type AlbumsOrderByInput = {
	albumId?: InputMaybe<Sort>;
	title?: InputMaybe<Sort>;
};

export type AlbumsPaginationInput = {
	limit?: InputMaybe<Scalars['Int']['input']>;
	offset?: InputMaybe<Scalars['Int']['input']>;
	orderBy?: InputMaybe<AlbumsOrderByInput>;
};

export type AlbumsUpdateManyInput = {
	data: Array<AlbumCreateOrUpdateInput>;
};

export type Artist = {
	__typename?: 'Artist';
	albums?: Maybe<Array<Album>>;
	artistId: Scalars['ID']['output'];
	name?: Maybe<Scalars['String']['output']>;
};

export type ArtistAlbumsArgs = {
	filter?: InputMaybe<AlbumsListFilter>;
};

export type ArtistCreateOrUpdateInput = {
	albums?: InputMaybe<Array<AlbumCreateOrUpdateInput>>;
	artistId?: InputMaybe<Scalars['ID']['input']>;
	name?: InputMaybe<Scalars['String']['input']>;
};

export type ArtistInsertInput = {
	albums?: InputMaybe<Array<AlbumCreateOrUpdateInput>>;
	name?: InputMaybe<Scalars['String']['input']>;
};

export type ArtistsCreateOrUpdateManyInput = {
	data: Array<ArtistCreateOrUpdateInput>;
};

export type ArtistsInsertManyInput = {
	data: Array<ArtistInsertInput>;
};

export type ArtistsListFilter = {
	_and?: InputMaybe<Array<ArtistsListFilter>>;
	_not?: InputMaybe<ArtistsListFilter>;
	_or?: InputMaybe<Array<ArtistsListFilter>>;
	albums?: InputMaybe<AlbumsListFilter>;
	artistId?: InputMaybe<Scalars['ID']['input']>;
	artistId_in?: InputMaybe<Array<Scalars['ID']['input']>>;
	artistId_ne?: InputMaybe<Scalars['ID']['input']>;
	artistId_nin?: InputMaybe<Array<Scalars['ID']['input']>>;
	artistId_notnull?: InputMaybe<Scalars['ID']['input']>;
	artistId_null?: InputMaybe<Scalars['ID']['input']>;
	name?: InputMaybe<Scalars['String']['input']>;
	name_ilike?: InputMaybe<Scalars['String']['input']>;
	name_in?: InputMaybe<Array<Scalars['String']['input']>>;
	name_like?: InputMaybe<Scalars['String']['input']>;
	name_ne?: InputMaybe<Scalars['String']['input']>;
	name_nin?: InputMaybe<Array<Scalars['String']['input']>>;
	name_notnull?: InputMaybe<Scalars['String']['input']>;
	name_null?: InputMaybe<Scalars['String']['input']>;
};

export type ArtistsOrderByInput = {
	albums?: InputMaybe<Sort>;
	artistId?: InputMaybe<Sort>;
	name?: InputMaybe<Sort>;
};

export type ArtistsPaginationInput = {
	limit?: InputMaybe<Scalars['Int']['input']>;
	offset?: InputMaybe<Scalars['Int']['input']>;
	orderBy?: InputMaybe<ArtistsOrderByInput>;
};

export type ArtistsUpdateManyInput = {
	data: Array<ArtistCreateOrUpdateInput>;
};

export type Customer = {
	__typename?: 'Customer';
	address?: Maybe<Scalars['String']['output']>;
	city?: Maybe<Scalars['String']['output']>;
	company?: Maybe<Scalars['String']['output']>;
	country?: Maybe<Scalars['String']['output']>;
	customerId: Scalars['ID']['output'];
	email: Scalars['String']['output'];
	employee?: Maybe<Employee>;
	fax?: Maybe<Scalars['String']['output']>;
	firstName: Scalars['String']['output'];
	invoices?: Maybe<Array<Invoice>>;
	lastName: Scalars['String']['output'];
	phone?: Maybe<Scalars['String']['output']>;
	postalCode?: Maybe<Scalars['String']['output']>;
	state?: Maybe<Scalars['String']['output']>;
};

export type CustomerEmployeeArgs = {
	filter?: InputMaybe<EmployeesListFilter>;
};

export type CustomerInvoicesArgs = {
	filter?: InputMaybe<InvoicesListFilter>;
};

export type CustomerCreateOrUpdateInput = {
	address?: InputMaybe<Scalars['String']['input']>;
	city?: InputMaybe<Scalars['String']['input']>;
	company?: InputMaybe<Scalars['String']['input']>;
	country?: InputMaybe<Scalars['String']['input']>;
	customerId?: InputMaybe<Scalars['ID']['input']>;
	email?: InputMaybe<Scalars['String']['input']>;
	employee?: InputMaybe<EmployeeCreateOrUpdateInput>;
	fax?: InputMaybe<Scalars['String']['input']>;
	firstName?: InputMaybe<Scalars['String']['input']>;
	invoices?: InputMaybe<Array<InvoiceCreateOrUpdateInput>>;
	lastName?: InputMaybe<Scalars['String']['input']>;
	phone?: InputMaybe<Scalars['String']['input']>;
	postalCode?: InputMaybe<Scalars['String']['input']>;
	state?: InputMaybe<Scalars['String']['input']>;
};

export type CustomerInsertInput = {
	address?: InputMaybe<Scalars['String']['input']>;
	city?: InputMaybe<Scalars['String']['input']>;
	company?: InputMaybe<Scalars['String']['input']>;
	country?: InputMaybe<Scalars['String']['input']>;
	email: Scalars['String']['input'];
	employee?: InputMaybe<EmployeeCreateOrUpdateInput>;
	fax?: InputMaybe<Scalars['String']['input']>;
	firstName: Scalars['String']['input'];
	invoices?: InputMaybe<Array<InvoiceCreateOrUpdateInput>>;
	lastName: Scalars['String']['input'];
	phone?: InputMaybe<Scalars['String']['input']>;
	postalCode?: InputMaybe<Scalars['String']['input']>;
	state?: InputMaybe<Scalars['String']['input']>;
};

export type CustomersCreateOrUpdateManyInput = {
	data: Array<CustomerCreateOrUpdateInput>;
};

export type CustomersInsertManyInput = {
	data: Array<CustomerInsertInput>;
};

export type CustomersListFilter = {
	_and?: InputMaybe<Array<CustomersListFilter>>;
	_not?: InputMaybe<CustomersListFilter>;
	_or?: InputMaybe<Array<CustomersListFilter>>;
	address?: InputMaybe<Scalars['String']['input']>;
	address_ilike?: InputMaybe<Scalars['String']['input']>;
	address_in?: InputMaybe<Array<Scalars['String']['input']>>;
	address_like?: InputMaybe<Scalars['String']['input']>;
	address_ne?: InputMaybe<Scalars['String']['input']>;
	address_nin?: InputMaybe<Array<Scalars['String']['input']>>;
	address_notnull?: InputMaybe<Scalars['String']['input']>;
	address_null?: InputMaybe<Scalars['String']['input']>;
	city?: InputMaybe<Scalars['String']['input']>;
	city_ilike?: InputMaybe<Scalars['String']['input']>;
	city_in?: InputMaybe<Array<Scalars['String']['input']>>;
	city_like?: InputMaybe<Scalars['String']['input']>;
	city_ne?: InputMaybe<Scalars['String']['input']>;
	city_nin?: InputMaybe<Array<Scalars['String']['input']>>;
	city_notnull?: InputMaybe<Scalars['String']['input']>;
	city_null?: InputMaybe<Scalars['String']['input']>;
	company?: InputMaybe<Scalars['String']['input']>;
	company_ilike?: InputMaybe<Scalars['String']['input']>;
	company_in?: InputMaybe<Array<Scalars['String']['input']>>;
	company_like?: InputMaybe<Scalars['String']['input']>;
	company_ne?: InputMaybe<Scalars['String']['input']>;
	company_nin?: InputMaybe<Array<Scalars['String']['input']>>;
	company_notnull?: InputMaybe<Scalars['String']['input']>;
	company_null?: InputMaybe<Scalars['String']['input']>;
	country?: InputMaybe<Scalars['String']['input']>;
	country_ilike?: InputMaybe<Scalars['String']['input']>;
	country_in?: InputMaybe<Array<Scalars['String']['input']>>;
	country_like?: InputMaybe<Scalars['String']['input']>;
	country_ne?: InputMaybe<Scalars['String']['input']>;
	country_nin?: InputMaybe<Array<Scalars['String']['input']>>;
	country_notnull?: InputMaybe<Scalars['String']['input']>;
	country_null?: InputMaybe<Scalars['String']['input']>;
	customerId?: InputMaybe<Scalars['ID']['input']>;
	customerId_in?: InputMaybe<Array<Scalars['ID']['input']>>;
	customerId_ne?: InputMaybe<Scalars['ID']['input']>;
	customerId_nin?: InputMaybe<Array<Scalars['ID']['input']>>;
	customerId_notnull?: InputMaybe<Scalars['ID']['input']>;
	customerId_null?: InputMaybe<Scalars['ID']['input']>;
	email?: InputMaybe<Scalars['String']['input']>;
	email_ilike?: InputMaybe<Scalars['String']['input']>;
	email_in?: InputMaybe<Array<Scalars['String']['input']>>;
	email_like?: InputMaybe<Scalars['String']['input']>;
	email_ne?: InputMaybe<Scalars['String']['input']>;
	email_nin?: InputMaybe<Array<Scalars['String']['input']>>;
	email_notnull?: InputMaybe<Scalars['String']['input']>;
	email_null?: InputMaybe<Scalars['String']['input']>;
	employee?: InputMaybe<EmployeesListFilter>;
	fax?: InputMaybe<Scalars['String']['input']>;
	fax_ilike?: InputMaybe<Scalars['String']['input']>;
	fax_in?: InputMaybe<Array<Scalars['String']['input']>>;
	fax_like?: InputMaybe<Scalars['String']['input']>;
	fax_ne?: InputMaybe<Scalars['String']['input']>;
	fax_nin?: InputMaybe<Array<Scalars['String']['input']>>;
	fax_notnull?: InputMaybe<Scalars['String']['input']>;
	fax_null?: InputMaybe<Scalars['String']['input']>;
	firstName?: InputMaybe<Scalars['String']['input']>;
	firstName_ilike?: InputMaybe<Scalars['String']['input']>;
	firstName_in?: InputMaybe<Array<Scalars['String']['input']>>;
	firstName_like?: InputMaybe<Scalars['String']['input']>;
	firstName_ne?: InputMaybe<Scalars['String']['input']>;
	firstName_nin?: InputMaybe<Array<Scalars['String']['input']>>;
	firstName_notnull?: InputMaybe<Scalars['String']['input']>;
	firstName_null?: InputMaybe<Scalars['String']['input']>;
	invoices?: InputMaybe<InvoicesListFilter>;
	lastName?: InputMaybe<Scalars['String']['input']>;
	lastName_ilike?: InputMaybe<Scalars['String']['input']>;
	lastName_in?: InputMaybe<Array<Scalars['String']['input']>>;
	lastName_like?: InputMaybe<Scalars['String']['input']>;
	lastName_ne?: InputMaybe<Scalars['String']['input']>;
	lastName_nin?: InputMaybe<Array<Scalars['String']['input']>>;
	lastName_notnull?: InputMaybe<Scalars['String']['input']>;
	lastName_null?: InputMaybe<Scalars['String']['input']>;
	phone?: InputMaybe<Scalars['String']['input']>;
	phone_ilike?: InputMaybe<Scalars['String']['input']>;
	phone_in?: InputMaybe<Array<Scalars['String']['input']>>;
	phone_like?: InputMaybe<Scalars['String']['input']>;
	phone_ne?: InputMaybe<Scalars['String']['input']>;
	phone_nin?: InputMaybe<Array<Scalars['String']['input']>>;
	phone_notnull?: InputMaybe<Scalars['String']['input']>;
	phone_null?: InputMaybe<Scalars['String']['input']>;
	postalCode?: InputMaybe<Scalars['String']['input']>;
	postalCode_ilike?: InputMaybe<Scalars['String']['input']>;
	postalCode_in?: InputMaybe<Array<Scalars['String']['input']>>;
	postalCode_like?: InputMaybe<Scalars['String']['input']>;
	postalCode_ne?: InputMaybe<Scalars['String']['input']>;
	postalCode_nin?: InputMaybe<Array<Scalars['String']['input']>>;
	postalCode_notnull?: InputMaybe<Scalars['String']['input']>;
	postalCode_null?: InputMaybe<Scalars['String']['input']>;
	state?: InputMaybe<Scalars['String']['input']>;
	state_ilike?: InputMaybe<Scalars['String']['input']>;
	state_in?: InputMaybe<Array<Scalars['String']['input']>>;
	state_like?: InputMaybe<Scalars['String']['input']>;
	state_ne?: InputMaybe<Scalars['String']['input']>;
	state_nin?: InputMaybe<Array<Scalars['String']['input']>>;
	state_notnull?: InputMaybe<Scalars['String']['input']>;
	state_null?: InputMaybe<Scalars['String']['input']>;
};

export type CustomersOrderByInput = {
	address?: InputMaybe<Sort>;
	city?: InputMaybe<Sort>;
	company?: InputMaybe<Sort>;
	country?: InputMaybe<Sort>;
	customerId?: InputMaybe<Sort>;
	email?: InputMaybe<Sort>;
	fax?: InputMaybe<Sort>;
	firstName?: InputMaybe<Sort>;
	invoices?: InputMaybe<Sort>;
	lastName?: InputMaybe<Sort>;
	phone?: InputMaybe<Sort>;
	postalCode?: InputMaybe<Sort>;
	state?: InputMaybe<Sort>;
};

export type CustomersPaginationInput = {
	limit?: InputMaybe<Scalars['Int']['input']>;
	offset?: InputMaybe<Scalars['Int']['input']>;
	orderBy?: InputMaybe<CustomersOrderByInput>;
};

export type CustomersUpdateManyInput = {
	data: Array<CustomerCreateOrUpdateInput>;
};

export type Employee = {
	__typename?: 'Employee';
	address?: Maybe<Scalars['String']['output']>;
	birthDate?: Maybe<Scalars['ISOString']['output']>;
	city?: Maybe<Scalars['String']['output']>;
	country?: Maybe<Scalars['String']['output']>;
	customers?: Maybe<Array<Customer>>;
	email?: Maybe<Scalars['String']['output']>;
	employee?: Maybe<Employee>;
	employeeId: Scalars['ID']['output'];
	employees?: Maybe<Array<Employee>>;
	fax?: Maybe<Scalars['String']['output']>;
	firstName: Scalars['String']['output'];
	hireDate?: Maybe<Scalars['ISOString']['output']>;
	lastName: Scalars['String']['output'];
	phone?: Maybe<Scalars['String']['output']>;
	postalCode?: Maybe<Scalars['String']['output']>;
	state?: Maybe<Scalars['String']['output']>;
	title?: Maybe<Scalars['String']['output']>;
};

export type EmployeeCustomersArgs = {
	filter?: InputMaybe<CustomersListFilter>;
};

export type EmployeeEmployeeArgs = {
	filter?: InputMaybe<EmployeesListFilter>;
};

export type EmployeeEmployeesArgs = {
	filter?: InputMaybe<EmployeesListFilter>;
};

export type EmployeeCreateOrUpdateInput = {
	address?: InputMaybe<Scalars['String']['input']>;
	birthDate?: InputMaybe<Scalars['ISOString']['input']>;
	city?: InputMaybe<Scalars['String']['input']>;
	country?: InputMaybe<Scalars['String']['input']>;
	customers?: InputMaybe<Array<CustomerCreateOrUpdateInput>>;
	email?: InputMaybe<Scalars['String']['input']>;
	employee?: InputMaybe<EmployeeCreateOrUpdateInput>;
	employeeId?: InputMaybe<Scalars['ID']['input']>;
	employees?: InputMaybe<Array<EmployeeCreateOrUpdateInput>>;
	fax?: InputMaybe<Scalars['String']['input']>;
	firstName?: InputMaybe<Scalars['String']['input']>;
	hireDate?: InputMaybe<Scalars['ISOString']['input']>;
	lastName?: InputMaybe<Scalars['String']['input']>;
	phone?: InputMaybe<Scalars['String']['input']>;
	postalCode?: InputMaybe<Scalars['String']['input']>;
	state?: InputMaybe<Scalars['String']['input']>;
	title?: InputMaybe<Scalars['String']['input']>;
};

export type EmployeeInsertInput = {
	address?: InputMaybe<Scalars['String']['input']>;
	birthDate?: InputMaybe<Scalars['ISOString']['input']>;
	city?: InputMaybe<Scalars['String']['input']>;
	country?: InputMaybe<Scalars['String']['input']>;
	customers?: InputMaybe<Array<CustomerCreateOrUpdateInput>>;
	email?: InputMaybe<Scalars['String']['input']>;
	employee?: InputMaybe<EmployeeCreateOrUpdateInput>;
	employees?: InputMaybe<Array<EmployeeCreateOrUpdateInput>>;
	fax?: InputMaybe<Scalars['String']['input']>;
	firstName: Scalars['String']['input'];
	hireDate?: InputMaybe<Scalars['ISOString']['input']>;
	lastName: Scalars['String']['input'];
	phone?: InputMaybe<Scalars['String']['input']>;
	postalCode?: InputMaybe<Scalars['String']['input']>;
	state?: InputMaybe<Scalars['String']['input']>;
	title?: InputMaybe<Scalars['String']['input']>;
};

export type EmployeesCreateOrUpdateManyInput = {
	data: Array<EmployeeCreateOrUpdateInput>;
};

export type EmployeesInsertManyInput = {
	data: Array<EmployeeInsertInput>;
};

export type EmployeesListFilter = {
	_and?: InputMaybe<Array<EmployeesListFilter>>;
	_not?: InputMaybe<EmployeesListFilter>;
	_or?: InputMaybe<Array<EmployeesListFilter>>;
	address?: InputMaybe<Scalars['String']['input']>;
	address_ilike?: InputMaybe<Scalars['String']['input']>;
	address_in?: InputMaybe<Array<Scalars['String']['input']>>;
	address_like?: InputMaybe<Scalars['String']['input']>;
	address_ne?: InputMaybe<Scalars['String']['input']>;
	address_nin?: InputMaybe<Array<Scalars['String']['input']>>;
	address_notnull?: InputMaybe<Scalars['String']['input']>;
	address_null?: InputMaybe<Scalars['String']['input']>;
	birthDate?: InputMaybe<Scalars['ISOString']['input']>;
	birthDate_gt?: InputMaybe<Scalars['ISOString']['input']>;
	birthDate_gte?: InputMaybe<Scalars['ISOString']['input']>;
	birthDate_in?: InputMaybe<Array<Scalars['ISOString']['input']>>;
	birthDate_lt?: InputMaybe<Scalars['ISOString']['input']>;
	birthDate_lte?: InputMaybe<Scalars['ISOString']['input']>;
	birthDate_ne?: InputMaybe<Scalars['ISOString']['input']>;
	birthDate_nin?: InputMaybe<Array<Scalars['ISOString']['input']>>;
	birthDate_notnull?: InputMaybe<Scalars['ISOString']['input']>;
	birthDate_null?: InputMaybe<Scalars['ISOString']['input']>;
	city?: InputMaybe<Scalars['String']['input']>;
	city_ilike?: InputMaybe<Scalars['String']['input']>;
	city_in?: InputMaybe<Array<Scalars['String']['input']>>;
	city_like?: InputMaybe<Scalars['String']['input']>;
	city_ne?: InputMaybe<Scalars['String']['input']>;
	city_nin?: InputMaybe<Array<Scalars['String']['input']>>;
	city_notnull?: InputMaybe<Scalars['String']['input']>;
	city_null?: InputMaybe<Scalars['String']['input']>;
	country?: InputMaybe<Scalars['String']['input']>;
	country_ilike?: InputMaybe<Scalars['String']['input']>;
	country_in?: InputMaybe<Array<Scalars['String']['input']>>;
	country_like?: InputMaybe<Scalars['String']['input']>;
	country_ne?: InputMaybe<Scalars['String']['input']>;
	country_nin?: InputMaybe<Array<Scalars['String']['input']>>;
	country_notnull?: InputMaybe<Scalars['String']['input']>;
	country_null?: InputMaybe<Scalars['String']['input']>;
	customers?: InputMaybe<CustomersListFilter>;
	email?: InputMaybe<Scalars['String']['input']>;
	email_ilike?: InputMaybe<Scalars['String']['input']>;
	email_in?: InputMaybe<Array<Scalars['String']['input']>>;
	email_like?: InputMaybe<Scalars['String']['input']>;
	email_ne?: InputMaybe<Scalars['String']['input']>;
	email_nin?: InputMaybe<Array<Scalars['String']['input']>>;
	email_notnull?: InputMaybe<Scalars['String']['input']>;
	email_null?: InputMaybe<Scalars['String']['input']>;
	employee?: InputMaybe<EmployeesListFilter>;
	employeeId?: InputMaybe<Scalars['ID']['input']>;
	employeeId_in?: InputMaybe<Array<Scalars['ID']['input']>>;
	employeeId_ne?: InputMaybe<Scalars['ID']['input']>;
	employeeId_nin?: InputMaybe<Array<Scalars['ID']['input']>>;
	employeeId_notnull?: InputMaybe<Scalars['ID']['input']>;
	employeeId_null?: InputMaybe<Scalars['ID']['input']>;
	employees?: InputMaybe<EmployeesListFilter>;
	fax?: InputMaybe<Scalars['String']['input']>;
	fax_ilike?: InputMaybe<Scalars['String']['input']>;
	fax_in?: InputMaybe<Array<Scalars['String']['input']>>;
	fax_like?: InputMaybe<Scalars['String']['input']>;
	fax_ne?: InputMaybe<Scalars['String']['input']>;
	fax_nin?: InputMaybe<Array<Scalars['String']['input']>>;
	fax_notnull?: InputMaybe<Scalars['String']['input']>;
	fax_null?: InputMaybe<Scalars['String']['input']>;
	firstName?: InputMaybe<Scalars['String']['input']>;
	firstName_ilike?: InputMaybe<Scalars['String']['input']>;
	firstName_in?: InputMaybe<Array<Scalars['String']['input']>>;
	firstName_like?: InputMaybe<Scalars['String']['input']>;
	firstName_ne?: InputMaybe<Scalars['String']['input']>;
	firstName_nin?: InputMaybe<Array<Scalars['String']['input']>>;
	firstName_notnull?: InputMaybe<Scalars['String']['input']>;
	firstName_null?: InputMaybe<Scalars['String']['input']>;
	hireDate?: InputMaybe<Scalars['ISOString']['input']>;
	hireDate_gt?: InputMaybe<Scalars['ISOString']['input']>;
	hireDate_gte?: InputMaybe<Scalars['ISOString']['input']>;
	hireDate_in?: InputMaybe<Array<Scalars['ISOString']['input']>>;
	hireDate_lt?: InputMaybe<Scalars['ISOString']['input']>;
	hireDate_lte?: InputMaybe<Scalars['ISOString']['input']>;
	hireDate_ne?: InputMaybe<Scalars['ISOString']['input']>;
	hireDate_nin?: InputMaybe<Array<Scalars['ISOString']['input']>>;
	hireDate_notnull?: InputMaybe<Scalars['ISOString']['input']>;
	hireDate_null?: InputMaybe<Scalars['ISOString']['input']>;
	lastName?: InputMaybe<Scalars['String']['input']>;
	lastName_ilike?: InputMaybe<Scalars['String']['input']>;
	lastName_in?: InputMaybe<Array<Scalars['String']['input']>>;
	lastName_like?: InputMaybe<Scalars['String']['input']>;
	lastName_ne?: InputMaybe<Scalars['String']['input']>;
	lastName_nin?: InputMaybe<Array<Scalars['String']['input']>>;
	lastName_notnull?: InputMaybe<Scalars['String']['input']>;
	lastName_null?: InputMaybe<Scalars['String']['input']>;
	phone?: InputMaybe<Scalars['String']['input']>;
	phone_ilike?: InputMaybe<Scalars['String']['input']>;
	phone_in?: InputMaybe<Array<Scalars['String']['input']>>;
	phone_like?: InputMaybe<Scalars['String']['input']>;
	phone_ne?: InputMaybe<Scalars['String']['input']>;
	phone_nin?: InputMaybe<Array<Scalars['String']['input']>>;
	phone_notnull?: InputMaybe<Scalars['String']['input']>;
	phone_null?: InputMaybe<Scalars['String']['input']>;
	postalCode?: InputMaybe<Scalars['String']['input']>;
	postalCode_ilike?: InputMaybe<Scalars['String']['input']>;
	postalCode_in?: InputMaybe<Array<Scalars['String']['input']>>;
	postalCode_like?: InputMaybe<Scalars['String']['input']>;
	postalCode_ne?: InputMaybe<Scalars['String']['input']>;
	postalCode_nin?: InputMaybe<Array<Scalars['String']['input']>>;
	postalCode_notnull?: InputMaybe<Scalars['String']['input']>;
	postalCode_null?: InputMaybe<Scalars['String']['input']>;
	state?: InputMaybe<Scalars['String']['input']>;
	state_ilike?: InputMaybe<Scalars['String']['input']>;
	state_in?: InputMaybe<Array<Scalars['String']['input']>>;
	state_like?: InputMaybe<Scalars['String']['input']>;
	state_ne?: InputMaybe<Scalars['String']['input']>;
	state_nin?: InputMaybe<Array<Scalars['String']['input']>>;
	state_notnull?: InputMaybe<Scalars['String']['input']>;
	state_null?: InputMaybe<Scalars['String']['input']>;
	title?: InputMaybe<Scalars['String']['input']>;
	title_ilike?: InputMaybe<Scalars['String']['input']>;
	title_in?: InputMaybe<Array<Scalars['String']['input']>>;
	title_like?: InputMaybe<Scalars['String']['input']>;
	title_ne?: InputMaybe<Scalars['String']['input']>;
	title_nin?: InputMaybe<Array<Scalars['String']['input']>>;
	title_notnull?: InputMaybe<Scalars['String']['input']>;
	title_null?: InputMaybe<Scalars['String']['input']>;
};

export type EmployeesOrderByInput = {
	address?: InputMaybe<Sort>;
	birthDate?: InputMaybe<Sort>;
	city?: InputMaybe<Sort>;
	country?: InputMaybe<Sort>;
	customers?: InputMaybe<Sort>;
	email?: InputMaybe<Sort>;
	employeeId?: InputMaybe<Sort>;
	fax?: InputMaybe<Sort>;
	firstName?: InputMaybe<Sort>;
	hireDate?: InputMaybe<Sort>;
	lastName?: InputMaybe<Sort>;
	phone?: InputMaybe<Sort>;
	postalCode?: InputMaybe<Sort>;
	state?: InputMaybe<Sort>;
	title?: InputMaybe<Sort>;
};

export type EmployeesPaginationInput = {
	limit?: InputMaybe<Scalars['Int']['input']>;
	offset?: InputMaybe<Scalars['Int']['input']>;
	orderBy?: InputMaybe<EmployeesOrderByInput>;
};

export type EmployeesUpdateManyInput = {
	data: Array<EmployeeCreateOrUpdateInput>;
};

export type Genre = {
	__typename?: 'Genre';
	genreId: Scalars['ID']['output'];
	name?: Maybe<Scalars['String']['output']>;
	tracks?: Maybe<Array<Track>>;
};

export type GenreTracksArgs = {
	filter?: InputMaybe<TracksListFilter>;
};

export type GenreCreateOrUpdateInput = {
	genreId?: InputMaybe<Scalars['ID']['input']>;
	name?: InputMaybe<Scalars['String']['input']>;
	tracks?: InputMaybe<Array<TrackCreateOrUpdateInput>>;
};

export type GenreInsertInput = {
	name?: InputMaybe<Scalars['String']['input']>;
	tracks?: InputMaybe<Array<TrackCreateOrUpdateInput>>;
};

export type GenresCreateOrUpdateManyInput = {
	data: Array<GenreCreateOrUpdateInput>;
};

export type GenresInsertManyInput = {
	data: Array<GenreInsertInput>;
};

export type GenresListFilter = {
	_and?: InputMaybe<Array<GenresListFilter>>;
	_not?: InputMaybe<GenresListFilter>;
	_or?: InputMaybe<Array<GenresListFilter>>;
	genreId?: InputMaybe<Scalars['ID']['input']>;
	genreId_in?: InputMaybe<Array<Scalars['ID']['input']>>;
	genreId_ne?: InputMaybe<Scalars['ID']['input']>;
	genreId_nin?: InputMaybe<Array<Scalars['ID']['input']>>;
	genreId_notnull?: InputMaybe<Scalars['ID']['input']>;
	genreId_null?: InputMaybe<Scalars['ID']['input']>;
	name?: InputMaybe<Scalars['String']['input']>;
	name_ilike?: InputMaybe<Scalars['String']['input']>;
	name_in?: InputMaybe<Array<Scalars['String']['input']>>;
	name_like?: InputMaybe<Scalars['String']['input']>;
	name_ne?: InputMaybe<Scalars['String']['input']>;
	name_nin?: InputMaybe<Array<Scalars['String']['input']>>;
	name_notnull?: InputMaybe<Scalars['String']['input']>;
	name_null?: InputMaybe<Scalars['String']['input']>;
	tracks?: InputMaybe<TracksListFilter>;
};

export type GenresOrderByInput = {
	genreId?: InputMaybe<Sort>;
	name?: InputMaybe<Sort>;
	tracks?: InputMaybe<Sort>;
};

export type GenresPaginationInput = {
	limit?: InputMaybe<Scalars['Int']['input']>;
	offset?: InputMaybe<Scalars['Int']['input']>;
	orderBy?: InputMaybe<GenresOrderByInput>;
};

export type GenresUpdateManyInput = {
	data: Array<GenreCreateOrUpdateInput>;
};

export type Invoice = {
	__typename?: 'Invoice';
	billingAddress?: Maybe<Scalars['String']['output']>;
	billingCity?: Maybe<Scalars['String']['output']>;
	billingCountry?: Maybe<Scalars['String']['output']>;
	billingPostalCode?: Maybe<Scalars['String']['output']>;
	billingState?: Maybe<Scalars['String']['output']>;
	customer?: Maybe<Customer>;
	invoiceId: Scalars['ID']['output'];
	invoiceDate: Scalars['ISOString']['output'];
	invoiceLines?: Maybe<Array<InvoiceLine>>;
	total: Scalars['String']['output'];
};

export type InvoiceCustomerArgs = {
	filter?: InputMaybe<CustomersListFilter>;
};

export type InvoiceInvoiceLinesArgs = {
	filter?: InputMaybe<InvoiceLinesListFilter>;
};

export type InvoiceCreateOrUpdateInput = {
	billingAddress?: InputMaybe<Scalars['String']['input']>;
	billingCity?: InputMaybe<Scalars['String']['input']>;
	billingCountry?: InputMaybe<Scalars['String']['input']>;
	billingPostalCode?: InputMaybe<Scalars['String']['input']>;
	billingState?: InputMaybe<Scalars['String']['input']>;
	customer?: InputMaybe<CustomerCreateOrUpdateInput>;
	invoiceId?: InputMaybe<Scalars['ID']['input']>;
	invoiceDate?: InputMaybe<Scalars['ISOString']['input']>;
	invoiceLines?: InputMaybe<Array<InvoiceLineCreateOrUpdateInput>>;
	total?: InputMaybe<Scalars['String']['input']>;
};

export type InvoiceInsertInput = {
	billingAddress?: InputMaybe<Scalars['String']['input']>;
	billingCity?: InputMaybe<Scalars['String']['input']>;
	billingCountry?: InputMaybe<Scalars['String']['input']>;
	billingPostalCode?: InputMaybe<Scalars['String']['input']>;
	billingState?: InputMaybe<Scalars['String']['input']>;
	customer?: InputMaybe<CustomerCreateOrUpdateInput>;
	invoiceDate?: InputMaybe<Scalars['ISOString']['input']>;
	invoiceLines?: InputMaybe<Array<InvoiceLineCreateOrUpdateInput>>;
	total: Scalars['String']['input'];
};

export type InvoiceLine = {
	__typename?: 'InvoiceLine';
	invoiceLineId: Scalars['ID']['output'];
	invoice?: Maybe<Invoice>;
	quantity: Scalars['Float']['output'];
	track?: Maybe<Track>;
	unitPrice: Scalars['String']['output'];
};

export type InvoiceLineInvoiceArgs = {
	filter?: InputMaybe<InvoicesListFilter>;
};

export type InvoiceLineTrackArgs = {
	filter?: InputMaybe<TracksListFilter>;
};

export type InvoiceLineCreateOrUpdateInput = {
	invoiceLineId?: InputMaybe<Scalars['ID']['input']>;
	invoice?: InputMaybe<InvoiceCreateOrUpdateInput>;
	quantity?: InputMaybe<Scalars['Float']['input']>;
	track?: InputMaybe<TrackCreateOrUpdateInput>;
	unitPrice?: InputMaybe<Scalars['String']['input']>;
};

export type InvoiceLineInsertInput = {
	invoice?: InputMaybe<InvoiceCreateOrUpdateInput>;
	quantity: Scalars['Float']['input'];
	track?: InputMaybe<TrackCreateOrUpdateInput>;
	unitPrice: Scalars['String']['input'];
};

export type InvoiceLinesCreateOrUpdateManyInput = {
	data: Array<InvoiceLineCreateOrUpdateInput>;
};

export type InvoiceLinesInsertManyInput = {
	data: Array<InvoiceLineInsertInput>;
};

export type InvoiceLinesListFilter = {
	_and?: InputMaybe<Array<InvoiceLinesListFilter>>;
	_not?: InputMaybe<InvoiceLinesListFilter>;
	_or?: InputMaybe<Array<InvoiceLinesListFilter>>;
	invoiceLineId?: InputMaybe<Scalars['ID']['input']>;
	invoiceLineId_in?: InputMaybe<Array<Scalars['ID']['input']>>;
	invoiceLineId_ne?: InputMaybe<Scalars['ID']['input']>;
	invoiceLineId_nin?: InputMaybe<Array<Scalars['ID']['input']>>;
	invoiceLineId_notnull?: InputMaybe<Scalars['ID']['input']>;
	invoiceLineId_null?: InputMaybe<Scalars['ID']['input']>;
	invoice?: InputMaybe<InvoicesListFilter>;
	quantity?: InputMaybe<Scalars['Float']['input']>;
	quantity_gt?: InputMaybe<Scalars['Float']['input']>;
	quantity_gte?: InputMaybe<Scalars['Float']['input']>;
	quantity_in?: InputMaybe<Array<Scalars['Float']['input']>>;
	quantity_lt?: InputMaybe<Scalars['Float']['input']>;
	quantity_lte?: InputMaybe<Scalars['Float']['input']>;
	quantity_ne?: InputMaybe<Scalars['Float']['input']>;
	quantity_nin?: InputMaybe<Array<Scalars['Float']['input']>>;
	quantity_notnull?: InputMaybe<Scalars['Float']['input']>;
	quantity_null?: InputMaybe<Scalars['Float']['input']>;
	track?: InputMaybe<TracksListFilter>;
	unitPrice?: InputMaybe<Scalars['String']['input']>;
	unitPrice_ilike?: InputMaybe<Scalars['String']['input']>;
	unitPrice_in?: InputMaybe<Array<Scalars['String']['input']>>;
	unitPrice_like?: InputMaybe<Scalars['String']['input']>;
	unitPrice_ne?: InputMaybe<Scalars['String']['input']>;
	unitPrice_nin?: InputMaybe<Array<Scalars['String']['input']>>;
	unitPrice_notnull?: InputMaybe<Scalars['String']['input']>;
	unitPrice_null?: InputMaybe<Scalars['String']['input']>;
};

export type InvoiceLinesOrderByInput = {
	invoiceLineId?: InputMaybe<Sort>;
	quantity?: InputMaybe<Sort>;
	track?: InputMaybe<Sort>;
	unitPrice?: InputMaybe<Sort>;
};

export type InvoiceLinesPaginationInput = {
	limit?: InputMaybe<Scalars['Int']['input']>;
	offset?: InputMaybe<Scalars['Int']['input']>;
	orderBy?: InputMaybe<InvoiceLinesOrderByInput>;
};

export type InvoiceLinesUpdateManyInput = {
	data: Array<InvoiceLineCreateOrUpdateInput>;
};

export type InvoicesCreateOrUpdateManyInput = {
	data: Array<InvoiceCreateOrUpdateInput>;
};

export type InvoicesInsertManyInput = {
	data: Array<InvoiceInsertInput>;
};

export type InvoicesListFilter = {
	_and?: InputMaybe<Array<InvoicesListFilter>>;
	_not?: InputMaybe<InvoicesListFilter>;
	_or?: InputMaybe<Array<InvoicesListFilter>>;
	billingAddress?: InputMaybe<Scalars['String']['input']>;
	billingAddress_ilike?: InputMaybe<Scalars['String']['input']>;
	billingAddress_in?: InputMaybe<Array<Scalars['String']['input']>>;
	billingAddress_like?: InputMaybe<Scalars['String']['input']>;
	billingAddress_ne?: InputMaybe<Scalars['String']['input']>;
	billingAddress_nin?: InputMaybe<Array<Scalars['String']['input']>>;
	billingAddress_notnull?: InputMaybe<Scalars['String']['input']>;
	billingAddress_null?: InputMaybe<Scalars['String']['input']>;
	billingCity?: InputMaybe<Scalars['String']['input']>;
	billingCity_ilike?: InputMaybe<Scalars['String']['input']>;
	billingCity_in?: InputMaybe<Array<Scalars['String']['input']>>;
	billingCity_like?: InputMaybe<Scalars['String']['input']>;
	billingCity_ne?: InputMaybe<Scalars['String']['input']>;
	billingCity_nin?: InputMaybe<Array<Scalars['String']['input']>>;
	billingCity_notnull?: InputMaybe<Scalars['String']['input']>;
	billingCity_null?: InputMaybe<Scalars['String']['input']>;
	billingCountry?: InputMaybe<Scalars['String']['input']>;
	billingCountry_ilike?: InputMaybe<Scalars['String']['input']>;
	billingCountry_in?: InputMaybe<Array<Scalars['String']['input']>>;
	billingCountry_like?: InputMaybe<Scalars['String']['input']>;
	billingCountry_ne?: InputMaybe<Scalars['String']['input']>;
	billingCountry_nin?: InputMaybe<Array<Scalars['String']['input']>>;
	billingCountry_notnull?: InputMaybe<Scalars['String']['input']>;
	billingCountry_null?: InputMaybe<Scalars['String']['input']>;
	billingPostalCode?: InputMaybe<Scalars['String']['input']>;
	billingPostalCode_ilike?: InputMaybe<Scalars['String']['input']>;
	billingPostalCode_in?: InputMaybe<Array<Scalars['String']['input']>>;
	billingPostalCode_like?: InputMaybe<Scalars['String']['input']>;
	billingPostalCode_ne?: InputMaybe<Scalars['String']['input']>;
	billingPostalCode_nin?: InputMaybe<Array<Scalars['String']['input']>>;
	billingPostalCode_notnull?: InputMaybe<Scalars['String']['input']>;
	billingPostalCode_null?: InputMaybe<Scalars['String']['input']>;
	billingState?: InputMaybe<Scalars['String']['input']>;
	billingState_ilike?: InputMaybe<Scalars['String']['input']>;
	billingState_in?: InputMaybe<Array<Scalars['String']['input']>>;
	billingState_like?: InputMaybe<Scalars['String']['input']>;
	billingState_ne?: InputMaybe<Scalars['String']['input']>;
	billingState_nin?: InputMaybe<Array<Scalars['String']['input']>>;
	billingState_notnull?: InputMaybe<Scalars['String']['input']>;
	billingState_null?: InputMaybe<Scalars['String']['input']>;
	customer?: InputMaybe<CustomersListFilter>;
	invoiceLineId?: InputMaybe<Scalars['ID']['input']>;
	invoiceLineId_in?: InputMaybe<Array<Scalars['ID']['input']>>;
	invoiceLineId_ne?: InputMaybe<Scalars['ID']['input']>;
	invoiceLineId_nin?: InputMaybe<Array<Scalars['ID']['input']>>;
	invoiceLineId_notnull?: InputMaybe<Scalars['ID']['input']>;
	invoiceLineId_null?: InputMaybe<Scalars['ID']['input']>;
	invoiceDate?: InputMaybe<Scalars['ISOString']['input']>;
	invoiceDate_gt?: InputMaybe<Scalars['ISOString']['input']>;
	invoiceDate_gte?: InputMaybe<Scalars['ISOString']['input']>;
	invoiceDate_in?: InputMaybe<Array<Scalars['ISOString']['input']>>;
	invoiceDate_lt?: InputMaybe<Scalars['ISOString']['input']>;
	invoiceDate_lte?: InputMaybe<Scalars['ISOString']['input']>;
	invoiceDate_ne?: InputMaybe<Scalars['ISOString']['input']>;
	invoiceDate_nin?: InputMaybe<Array<Scalars['ISOString']['input']>>;
	invoiceDate_notnull?: InputMaybe<Scalars['ISOString']['input']>;
	invoiceDate_null?: InputMaybe<Scalars['ISOString']['input']>;
	invoiceLines?: InputMaybe<InvoiceLinesListFilter>;
	total?: InputMaybe<Scalars['String']['input']>;
	total_ilike?: InputMaybe<Scalars['String']['input']>;
	total_in?: InputMaybe<Array<Scalars['String']['input']>>;
	total_like?: InputMaybe<Scalars['String']['input']>;
	total_ne?: InputMaybe<Scalars['String']['input']>;
	total_nin?: InputMaybe<Array<Scalars['String']['input']>>;
	total_notnull?: InputMaybe<Scalars['String']['input']>;
	total_null?: InputMaybe<Scalars['String']['input']>;
};

export type InvoicesOrderByInput = {
	billingAddress?: InputMaybe<Sort>;
	billingCity?: InputMaybe<Sort>;
	billingCountry?: InputMaybe<Sort>;
	billingPostalCode?: InputMaybe<Sort>;
	billingState?: InputMaybe<Sort>;
	invoiceId?: InputMaybe<Sort>;
	invoiceDate?: InputMaybe<Sort>;
	invoiceLines?: InputMaybe<Sort>;
	total?: InputMaybe<Sort>;
};

export type InvoicesPaginationInput = {
	limit?: InputMaybe<Scalars['Int']['input']>;
	offset?: InputMaybe<Scalars['Int']['input']>;
	orderBy?: InputMaybe<InvoicesOrderByInput>;
};

export type InvoicesUpdateManyInput = {
	data: Array<InvoiceCreateOrUpdateInput>;
};

export type MediaType = {
	__typename?: 'MediaType';
	mediaTypeId: Scalars['ID']['output'];
	name?: Maybe<Scalars['String']['output']>;
	tracks?: Maybe<Array<Track>>;
};

export type MediaTypeTracksArgs = {
	filter?: InputMaybe<TracksListFilter>;
};

export type MediaTypeCreateOrUpdateInput = {
	mediaTypeId?: InputMaybe<Scalars['ID']['input']>;
	name?: InputMaybe<Scalars['String']['input']>;
	tracks?: InputMaybe<Array<TrackCreateOrUpdateInput>>;
};

export type MediaTypeInsertInput = {
	name?: InputMaybe<Scalars['String']['input']>;
	tracks?: InputMaybe<Array<TrackCreateOrUpdateInput>>;
};

export type MediaTypesCreateOrUpdateManyInput = {
	data: Array<MediaTypeCreateOrUpdateInput>;
};

export type MediaTypesInsertManyInput = {
	data: Array<MediaTypeInsertInput>;
};

export type MediaTypesListFilter = {
	_and?: InputMaybe<Array<MediaTypesListFilter>>;
	_not?: InputMaybe<MediaTypesListFilter>;
	_or?: InputMaybe<Array<MediaTypesListFilter>>;
	mediaTypeId?: InputMaybe<Scalars['ID']['input']>;
	mediaTypeId_in?: InputMaybe<Array<Scalars['ID']['input']>>;
	mediaTypeId_ne?: InputMaybe<Scalars['ID']['input']>;
	mediaTypeId_nin?: InputMaybe<Array<Scalars['ID']['input']>>;
	mediaTypeId_notnull?: InputMaybe<Scalars['ID']['input']>;
	mediaTypeId_null?: InputMaybe<Scalars['ID']['input']>;
	name?: InputMaybe<Scalars['String']['input']>;
	name_ilike?: InputMaybe<Scalars['String']['input']>;
	name_in?: InputMaybe<Array<Scalars['String']['input']>>;
	name_like?: InputMaybe<Scalars['String']['input']>;
	name_ne?: InputMaybe<Scalars['String']['input']>;
	name_nin?: InputMaybe<Array<Scalars['String']['input']>>;
	name_notnull?: InputMaybe<Scalars['String']['input']>;
	name_null?: InputMaybe<Scalars['String']['input']>;
	tracks?: InputMaybe<TracksListFilter>;
};

export type MediaTypesOrderByInput = {
	mediaTypeId?: InputMaybe<Sort>;
	name?: InputMaybe<Sort>;
	tracks?: InputMaybe<Sort>;
};

export type MediaTypesPaginationInput = {
	limit?: InputMaybe<Scalars['Int']['input']>;
	offset?: InputMaybe<Scalars['Int']['input']>;
	orderBy?: InputMaybe<MediaTypesOrderByInput>;
};

export type MediaTypesUpdateManyInput = {
	data: Array<MediaTypeCreateOrUpdateInput>;
};

export type Mutation = {
	__typename?: 'Mutation';
	createAlbum: Album;
	createAlbums: Array<Album>;
	createArtist: Artist;
	createArtists: Array<Artist>;
	createCustomer: Customer;
	createCustomers: Array<Customer>;
	createEmployee: Employee;
	createEmployees: Array<Employee>;
	createGenre: Genre;
	createGenres: Array<Genre>;
	createInvoice: Invoice;
	createInvoiceLine: InvoiceLine;
	createInvoiceLines: Array<InvoiceLine>;
	createInvoices: Array<Invoice>;
	createMediaType: MediaType;
	createMediaTypes: Array<MediaType>;
	createOrUpdateAlbums: Array<Album>;
	createOrUpdateArtists: Array<Artist>;
	createOrUpdateCustomers: Array<Customer>;
	createOrUpdateEmployees: Array<Employee>;
	createOrUpdateGenres: Array<Genre>;
	createOrUpdateInvoiceLines: Array<InvoiceLine>;
	createOrUpdateInvoices: Array<Invoice>;
	createOrUpdateMediaTypes: Array<MediaType>;
	createOrUpdatePlaylists: Array<Playlist>;
	createOrUpdateTracks: Array<Track>;
	createPlaylist: Playlist;
	createPlaylists: Array<Playlist>;
	createTrack: Track;
	createTracks: Array<Track>;
	deleteAlbum: Scalars['Boolean']['output'];
	deleteArtist: Scalars['Boolean']['output'];
	deleteCustomer: Scalars['Boolean']['output'];
	deleteEmployee: Scalars['Boolean']['output'];
	deleteGenre: Scalars['Boolean']['output'];
	deleteInvoice: Scalars['Boolean']['output'];
	deleteInvoiceLine: Scalars['Boolean']['output'];
	deleteMediaType: Scalars['Boolean']['output'];
	deletePlaylist: Scalars['Boolean']['output'];
	deleteTrack: Scalars['Boolean']['output'];
	updateAlbum: Album;
	updateAlbums: Array<Album>;
	updateArtist: Artist;
	updateArtists: Array<Artist>;
	updateCustomer: Customer;
	updateCustomers: Array<Customer>;
	updateEmployee: Employee;
	updateEmployees: Array<Employee>;
	updateGenre: Genre;
	updateGenres: Array<Genre>;
	updateInvoice: Invoice;
	updateInvoiceLine: InvoiceLine;
	updateInvoiceLines: Array<InvoiceLine>;
	updateInvoices: Array<Invoice>;
	updateMediaType: MediaType;
	updateMediaTypes: Array<MediaType>;
	updatePlaylist: Playlist;
	updatePlaylists: Array<Playlist>;
	updateTrack: Track;
	updateTracks: Array<Track>;
};

export type MutationCreateAlbumArgs = {
	data: AlbumInsertInput;
};

export type MutationCreateAlbumsArgs = {
	input: AlbumsInsertManyInput;
};

export type MutationCreateArtistArgs = {
	data: ArtistInsertInput;
};

export type MutationCreateArtistsArgs = {
	input: ArtistsInsertManyInput;
};

export type MutationCreateCustomerArgs = {
	data: CustomerInsertInput;
};

export type MutationCreateCustomersArgs = {
	input: CustomersInsertManyInput;
};

export type MutationCreateEmployeeArgs = {
	data: EmployeeInsertInput;
};

export type MutationCreateEmployeesArgs = {
	input: EmployeesInsertManyInput;
};

export type MutationCreateGenreArgs = {
	data: GenreInsertInput;
};

export type MutationCreateGenresArgs = {
	input: GenresInsertManyInput;
};

export type MutationCreateInvoiceArgs = {
	data: InvoiceInsertInput;
};

export type MutationCreateInvoiceLineArgs = {
	data: InvoiceLineInsertInput;
};

export type MutationCreateInvoiceLinesArgs = {
	input: InvoiceLinesInsertManyInput;
};

export type MutationCreateInvoicesArgs = {
	input: InvoicesInsertManyInput;
};

export type MutationCreateMediaTypeArgs = {
	data: MediaTypeInsertInput;
};

export type MutationCreateMediaTypesArgs = {
	input: MediaTypesInsertManyInput;
};

export type MutationCreateOrUpdateAlbumsArgs = {
	input: AlbumsCreateOrUpdateManyInput;
};

export type MutationCreateOrUpdateArtistsArgs = {
	input: ArtistsCreateOrUpdateManyInput;
};

export type MutationCreateOrUpdateCustomersArgs = {
	input: CustomersCreateOrUpdateManyInput;
};

export type MutationCreateOrUpdateEmployeesArgs = {
	input: EmployeesCreateOrUpdateManyInput;
};

export type MutationCreateOrUpdateGenresArgs = {
	input: GenresCreateOrUpdateManyInput;
};

export type MutationCreateOrUpdateInvoiceLinesArgs = {
	input: InvoiceLinesCreateOrUpdateManyInput;
};

export type MutationCreateOrUpdateInvoicesArgs = {
	input: InvoicesCreateOrUpdateManyInput;
};

export type MutationCreateOrUpdateMediaTypesArgs = {
	input: MediaTypesCreateOrUpdateManyInput;
};

export type MutationCreateOrUpdatePlaylistsArgs = {
	input: PlaylistsCreateOrUpdateManyInput;
};

export type MutationCreateOrUpdateTracksArgs = {
	input: TracksCreateOrUpdateManyInput;
};

export type MutationCreatePlaylistArgs = {
	data: PlaylistInsertInput;
};

export type MutationCreatePlaylistsArgs = {
	input: PlaylistsInsertManyInput;
};

export type MutationCreateTrackArgs = {
	data: TrackInsertInput;
};

export type MutationCreateTracksArgs = {
	input: TracksInsertManyInput;
};

export type MutationDeleteAlbumArgs = {
	id: Scalars['ID']['input'];
};

export type MutationDeleteArtistArgs = {
	id: Scalars['ID']['input'];
};

export type MutationDeleteCustomerArgs = {
	id: Scalars['ID']['input'];
};

export type MutationDeleteEmployeeArgs = {
	id: Scalars['ID']['input'];
};

export type MutationDeleteGenreArgs = {
	id: Scalars['ID']['input'];
};

export type MutationDeleteInvoiceArgs = {
	id: Scalars['ID']['input'];
};

export type MutationDeleteInvoiceLineArgs = {
	id: Scalars['ID']['input'];
};

export type MutationDeleteMediaTypeArgs = {
	id: Scalars['ID']['input'];
};

export type MutationDeletePlaylistArgs = {
	id: Scalars['ID']['input'];
};

export type MutationDeleteTrackArgs = {
	id: Scalars['ID']['input'];
};

export type MutationUpdateAlbumArgs = {
	data: AlbumCreateOrUpdateInput;
};

export type MutationUpdateAlbumsArgs = {
	input: AlbumsUpdateManyInput;
};

export type MutationUpdateArtistArgs = {
	data: ArtistCreateOrUpdateInput;
};

export type MutationUpdateArtistsArgs = {
	input: ArtistsUpdateManyInput;
};

export type MutationUpdateCustomerArgs = {
	data: CustomerCreateOrUpdateInput;
};

export type MutationUpdateCustomersArgs = {
	input: CustomersUpdateManyInput;
};

export type MutationUpdateEmployeeArgs = {
	data: EmployeeCreateOrUpdateInput;
};

export type MutationUpdateEmployeesArgs = {
	input: EmployeesUpdateManyInput;
};

export type MutationUpdateGenreArgs = {
	data: GenreCreateOrUpdateInput;
};

export type MutationUpdateGenresArgs = {
	input: GenresUpdateManyInput;
};

export type MutationUpdateInvoiceArgs = {
	data: InvoiceCreateOrUpdateInput;
};

export type MutationUpdateInvoiceLineArgs = {
	data: InvoiceLineCreateOrUpdateInput;
};

export type MutationUpdateInvoiceLinesArgs = {
	input: InvoiceLinesUpdateManyInput;
};

export type MutationUpdateInvoicesArgs = {
	input: InvoicesUpdateManyInput;
};

export type MutationUpdateMediaTypeArgs = {
	data: MediaTypeCreateOrUpdateInput;
};

export type MutationUpdateMediaTypesArgs = {
	input: MediaTypesUpdateManyInput;
};

export type MutationUpdatePlaylistArgs = {
	data: PlaylistCreateOrUpdateInput;
};

export type MutationUpdatePlaylistsArgs = {
	input: PlaylistsUpdateManyInput;
};

export type MutationUpdateTrackArgs = {
	data: TrackCreateOrUpdateInput;
};

export type MutationUpdateTracksArgs = {
	input: TracksUpdateManyInput;
};

export type Playlist = {
	__typename?: 'Playlist';
	id: Scalars['ID']['output'];
	name?: Maybe<Scalars['String']['output']>;
	tracks?: Maybe<Array<Track>>;
};

export type PlaylistTracksArgs = {
	filter?: InputMaybe<TracksListFilter>;
};

export type PlaylistCreateOrUpdateInput = {
	id?: InputMaybe<Scalars['ID']['input']>;
	name?: InputMaybe<Scalars['String']['input']>;
	tracks?: InputMaybe<Array<TrackCreateOrUpdateInput>>;
};

export type PlaylistInsertInput = {
	name?: InputMaybe<Scalars['String']['input']>;
	tracks?: InputMaybe<Array<TrackCreateOrUpdateInput>>;
};

export type PlaylistsCreateOrUpdateManyInput = {
	data: Array<PlaylistCreateOrUpdateInput>;
};

export type PlaylistsInsertManyInput = {
	data: Array<PlaylistInsertInput>;
};

export type PlaylistsListFilter = {
	_and?: InputMaybe<Array<PlaylistsListFilter>>;
	_not?: InputMaybe<PlaylistsListFilter>;
	_or?: InputMaybe<Array<PlaylistsListFilter>>;
	playlistId?: InputMaybe<Scalars['ID']['input']>;
	playlistId_in?: InputMaybe<Array<Scalars['ID']['input']>>;
	playlistId_ne?: InputMaybe<Scalars['ID']['input']>;
	playlistId_nin?: InputMaybe<Array<Scalars['ID']['input']>>;
	playlistId_notnull?: InputMaybe<Scalars['ID']['input']>;
	playlistId_null?: InputMaybe<Scalars['ID']['input']>;
	name?: InputMaybe<Scalars['String']['input']>;
	name_ilike?: InputMaybe<Scalars['String']['input']>;
	name_in?: InputMaybe<Array<Scalars['String']['input']>>;
	name_like?: InputMaybe<Scalars['String']['input']>;
	name_ne?: InputMaybe<Scalars['String']['input']>;
	name_nin?: InputMaybe<Array<Scalars['String']['input']>>;
	name_notnull?: InputMaybe<Scalars['String']['input']>;
	name_null?: InputMaybe<Scalars['String']['input']>;
	tracks?: InputMaybe<TracksListFilter>;
};

export type PlaylistsOrderByInput = {
	playlistId?: InputMaybe<Sort>;
	name?: InputMaybe<Sort>;
	tracks?: InputMaybe<Sort>;
};

export type PlaylistsPaginationInput = {
	limit?: InputMaybe<Scalars['Int']['input']>;
	offset?: InputMaybe<Scalars['Int']['input']>;
	orderBy?: InputMaybe<PlaylistsOrderByInput>;
};

export type PlaylistsUpdateManyInput = {
	data: Array<PlaylistCreateOrUpdateInput>;
};

export type Query = {
	__typename?: 'Query';
	_graphweaver: AdminUiMetadata;
	album?: Maybe<Album>;
	albums: Array<Album>;
	artist?: Maybe<Artist>;
	artists: Array<Artist>;
	customer?: Maybe<Customer>;
	customers: Array<Customer>;
	employee?: Maybe<Employee>;
	employees: Array<Employee>;
	genre?: Maybe<Genre>;
	genres: Array<Genre>;
	invoice?: Maybe<Invoice>;
	invoiceLine?: Maybe<InvoiceLine>;
	invoiceLines: Array<InvoiceLine>;
	invoices: Array<Invoice>;
	mediaType?: Maybe<MediaType>;
	mediaTypes: Array<MediaType>;
	playlist?: Maybe<Playlist>;
	playlists: Array<Playlist>;
	track?: Maybe<Track>;
	tracks: Array<Track>;
};

export type QueryAlbumArgs = {
	albumId: Scalars['ID']['input'];
};

export type QueryAlbumsArgs = {
	filter?: InputMaybe<AlbumsListFilter>;
	pagination?: InputMaybe<AlbumsPaginationInput>;
};

export type QueryArtistArgs = {
	artistId: Scalars['ID']['input'];
};

export type QueryArtistsArgs = {
	filter?: InputMaybe<ArtistsListFilter>;
	pagination?: InputMaybe<ArtistsPaginationInput>;
};

export type QueryCustomerArgs = {
	customerId: Scalars['ID']['input'];
};

export type QueryCustomersArgs = {
	filter?: InputMaybe<CustomersListFilter>;
	pagination?: InputMaybe<CustomersPaginationInput>;
};

export type QueryEmployeeArgs = {
	employeeId: Scalars['ID']['input'];
};

export type QueryEmployeesArgs = {
	filter?: InputMaybe<EmployeesListFilter>;
	pagination?: InputMaybe<EmployeesPaginationInput>;
};

export type QueryGenreArgs = {
	genreId: Scalars['ID']['input'];
};

export type QueryGenresArgs = {
	filter?: InputMaybe<GenresListFilter>;
	pagination?: InputMaybe<GenresPaginationInput>;
};

export type QueryInvoiceArgs = {
	invoiceId: Scalars['ID']['input'];
};

export type QueryInvoiceLineArgs = {
	invoiceLineId: Scalars['ID']['input'];
};

export type QueryInvoiceLinesArgs = {
	filter?: InputMaybe<InvoiceLinesListFilter>;
	pagination?: InputMaybe<InvoiceLinesPaginationInput>;
};

export type QueryInvoicesArgs = {
	filter?: InputMaybe<InvoicesListFilter>;
	pagination?: InputMaybe<InvoicesPaginationInput>;
};

export type QueryMediaTypeArgs = {
	mediaTypeId: Scalars['ID']['input'];
};

export type QueryMediaTypesArgs = {
	filter?: InputMaybe<MediaTypesListFilter>;
	pagination?: InputMaybe<MediaTypesPaginationInput>;
};

export type QueryPlaylistArgs = {
	playlistId: Scalars['ID']['input'];
};

export type QueryPlaylistsArgs = {
	filter?: InputMaybe<PlaylistsListFilter>;
	pagination?: InputMaybe<PlaylistsPaginationInput>;
};

export type QueryTrackArgs = {
	trackId: Scalars['ID']['input'];
};

export type QueryTracksArgs = {
	filter?: InputMaybe<TracksListFilter>;
	pagination?: InputMaybe<TracksPaginationInput>;
};

export enum Sort {
	Asc = 'ASC',
	Desc = 'DESC',
}

export type Track = {
	__typename?: 'Track';
	album?: Maybe<Album>;
	bytes?: Maybe<Scalars['Float']['output']>;
	composer?: Maybe<Scalars['String']['output']>;
	genre?: Maybe<Genre>;
	invoiceLines?: Maybe<Array<InvoiceLine>>;
	mediaType?: Maybe<MediaType>;
	milliseconds: Scalars['Float']['output'];
	name: Scalars['String']['output'];
	playlists?: Maybe<Array<Playlist>>;
	trackId: Scalars['ID']['output'];
	unitPrice: Scalars['String']['output'];
};

export type TrackAlbumArgs = {
	filter?: InputMaybe<AlbumsListFilter>;
};

export type TrackGenreArgs = {
	filter?: InputMaybe<GenresListFilter>;
};

export type TrackInvoiceLinesArgs = {
	filter?: InputMaybe<InvoiceLinesListFilter>;
};

export type TrackMediaTypeArgs = {
	filter?: InputMaybe<MediaTypesListFilter>;
};

export type TrackPlaylistsArgs = {
	filter?: InputMaybe<PlaylistsListFilter>;
};

export type TrackCreateOrUpdateInput = {
	album?: InputMaybe<AlbumCreateOrUpdateInput>;
	bytes?: InputMaybe<Scalars['Float']['input']>;
	composer?: InputMaybe<Scalars['String']['input']>;
	genre?: InputMaybe<GenreCreateOrUpdateInput>;
	invoiceLines?: InputMaybe<Array<InvoiceLineCreateOrUpdateInput>>;
	mediaType?: InputMaybe<MediaTypeCreateOrUpdateInput>;
	milliseconds?: InputMaybe<Scalars['Float']['input']>;
	name?: InputMaybe<Scalars['String']['input']>;
	playlists?: InputMaybe<Array<PlaylistCreateOrUpdateInput>>;
	trackId?: InputMaybe<Scalars['ID']['input']>;
	unitPrice?: InputMaybe<Scalars['String']['input']>;
};

export type TrackInsertInput = {
	album?: InputMaybe<AlbumCreateOrUpdateInput>;
	bytes?: InputMaybe<Scalars['Float']['input']>;
	composer?: InputMaybe<Scalars['String']['input']>;
	genre?: InputMaybe<GenreCreateOrUpdateInput>;
	invoiceLines?: InputMaybe<Array<InvoiceLineCreateOrUpdateInput>>;
	mediaType?: InputMaybe<MediaTypeCreateOrUpdateInput>;
	milliseconds: Scalars['Float']['input'];
	name: Scalars['String']['input'];
	playlists?: InputMaybe<Array<PlaylistCreateOrUpdateInput>>;
	unitPrice: Scalars['String']['input'];
};

export type TracksCreateOrUpdateManyInput = {
	data: Array<TrackCreateOrUpdateInput>;
};

export type TracksInsertManyInput = {
	data: Array<TrackInsertInput>;
};

export type TracksListFilter = {
	_and?: InputMaybe<Array<TracksListFilter>>;
	_not?: InputMaybe<TracksListFilter>;
	_or?: InputMaybe<Array<TracksListFilter>>;
	album?: InputMaybe<AlbumsListFilter>;
	bytes?: InputMaybe<Scalars['Float']['input']>;
	bytes_gt?: InputMaybe<Scalars['Float']['input']>;
	bytes_gte?: InputMaybe<Scalars['Float']['input']>;
	bytes_in?: InputMaybe<Array<Scalars['Float']['input']>>;
	bytes_lt?: InputMaybe<Scalars['Float']['input']>;
	bytes_lte?: InputMaybe<Scalars['Float']['input']>;
	bytes_ne?: InputMaybe<Scalars['Float']['input']>;
	bytes_nin?: InputMaybe<Array<Scalars['Float']['input']>>;
	bytes_notnull?: InputMaybe<Scalars['Float']['input']>;
	bytes_null?: InputMaybe<Scalars['Float']['input']>;
	composer?: InputMaybe<Scalars['String']['input']>;
	composer_ilike?: InputMaybe<Scalars['String']['input']>;
	composer_in?: InputMaybe<Array<Scalars['String']['input']>>;
	composer_like?: InputMaybe<Scalars['String']['input']>;
	composer_ne?: InputMaybe<Scalars['String']['input']>;
	composer_nin?: InputMaybe<Array<Scalars['String']['input']>>;
	composer_notnull?: InputMaybe<Scalars['String']['input']>;
	composer_null?: InputMaybe<Scalars['String']['input']>;
	genre?: InputMaybe<GenresListFilter>;
	trackId?: InputMaybe<Scalars['ID']['input']>;
	trackId_in?: InputMaybe<Array<Scalars['ID']['input']>>;
	trackId_ne?: InputMaybe<Scalars['ID']['input']>;
	trackId_nin?: InputMaybe<Array<Scalars['ID']['input']>>;
	trackId_notnull?: InputMaybe<Scalars['ID']['input']>;
	trackId_null?: InputMaybe<Scalars['ID']['input']>;
	invoiceLines?: InputMaybe<InvoiceLinesListFilter>;
	mediaType?: InputMaybe<MediaTypesListFilter>;
	milliseconds?: InputMaybe<Scalars['Float']['input']>;
	milliseconds_gt?: InputMaybe<Scalars['Float']['input']>;
	milliseconds_gte?: InputMaybe<Scalars['Float']['input']>;
	milliseconds_in?: InputMaybe<Array<Scalars['Float']['input']>>;
	milliseconds_lt?: InputMaybe<Scalars['Float']['input']>;
	milliseconds_lte?: InputMaybe<Scalars['Float']['input']>;
	milliseconds_ne?: InputMaybe<Scalars['Float']['input']>;
	milliseconds_nin?: InputMaybe<Array<Scalars['Float']['input']>>;
	milliseconds_notnull?: InputMaybe<Scalars['Float']['input']>;
	milliseconds_null?: InputMaybe<Scalars['Float']['input']>;
	name?: InputMaybe<Scalars['String']['input']>;
	name_ilike?: InputMaybe<Scalars['String']['input']>;
	name_in?: InputMaybe<Array<Scalars['String']['input']>>;
	name_like?: InputMaybe<Scalars['String']['input']>;
	name_ne?: InputMaybe<Scalars['String']['input']>;
	name_nin?: InputMaybe<Array<Scalars['String']['input']>>;
	name_notnull?: InputMaybe<Scalars['String']['input']>;
	name_null?: InputMaybe<Scalars['String']['input']>;
	playlists?: InputMaybe<PlaylistsListFilter>;
	unitPrice?: InputMaybe<Scalars['String']['input']>;
	unitPrice_ilike?: InputMaybe<Scalars['String']['input']>;
	unitPrice_in?: InputMaybe<Array<Scalars['String']['input']>>;
	unitPrice_like?: InputMaybe<Scalars['String']['input']>;
	unitPrice_ne?: InputMaybe<Scalars['String']['input']>;
	unitPrice_nin?: InputMaybe<Array<Scalars['String']['input']>>;
	unitPrice_notnull?: InputMaybe<Scalars['String']['input']>;
	unitPrice_null?: InputMaybe<Scalars['String']['input']>;
};

export type TracksOrderByInput = {
	album?: InputMaybe<Sort>;
	bytes?: InputMaybe<Sort>;
	composer?: InputMaybe<Sort>;
	trackId?: InputMaybe<Sort>;
	milliseconds?: InputMaybe<Sort>;
	name?: InputMaybe<Sort>;
	unitPrice?: InputMaybe<Sort>;
};

export type TracksPaginationInput = {
	limit?: InputMaybe<Scalars['Int']['input']>;
	offset?: InputMaybe<Scalars['Int']['input']>;
	orderBy?: InputMaybe<TracksOrderByInput>;
};

export type TracksUpdateManyInput = {
	data: Array<TrackCreateOrUpdateInput>;
};
