/** ===== [ numeric filter ] ===== */
.numericInputWrapper {
	display: flex;
	flex-direction: column;
}

.numericInput {
	display: flex;
	flex-direction: row;
	gap: 8px;
	z-index: 2;
}

.numericInput input {
	text-transform: uppercase;
	color: hsl(0, 0%, 50%);
	font-size: 100%;
	background-color: var(--select-background);
	border-color: var(--select-border-color);
	border-radius: 6px;
	border-style: solid;
	border-width: 1px;
	min-height: 36px;
	padding-left: 10px;
}

.numericInput input:hover {
	background-color: var(--primary-color);
	color: var(--body-copy-color);
	border-radius: 6px;
	padding-right: 10px;
}

/** ===== [ react-date-time ] ===== */

.filterSelector {
	display: flex;
	flex-direction: row;
	color: var(--body-copy-color);
	border: 1px solid var(--select-border-color);
	border-radius: 6px;
}

.filterSelector:hover {
	border-color: hsl(0, 0%, 70%);
}

.inputField {
	text-transform: uppercase;
	color: hsl(0, 0%, 50%);
	font-size: 100%;
	background-color: var(--select-background);
	border: none;
	min-height: 36px;
	padding-top: 8px;
	padding-left: 10px;
}

.inputFieldActive {
	background-color: var(--primary-color);
	color: var(--body-copy-color);
	border-radius: 6px 0px 0px 6px;
	padding-right: 10px;
}

.indicatorSeparator {
	align-self: stretch;
	width: 1px;
	background-color: var(--select-border-color);
	margin-bottom: 8px;
	margin-top: 8px;
}

.indicatorContainer {
	display: flex;
	transition: color 150ms;
	color: hsl(0, 0%, 80%);
	padding: 8px;
	background-color: var(--select-background);
}

.indicatorWrapper {
	align-items: center;
	align-self: stretch;
	display: flex;
	flex-shrink: 0;
}

.closeIconContainer {
	width: 32px;
	background-color: var(--select-background);
	color: var(--primary-color);
	position: relative;
	cursor: pointer;
	padding: 6px;
}

.closeIconSeparator {
	align-self: stretch;
	width: 1px;
	background-color: var(--select-border-color);
	margin-bottom: 8px;
	margin-top: 8px;
	box-sizing: border-box;
}

.closeIcon {
	display: inline-block;
	fill: currentColor;
	line-height: 1;
	stroke: currentColor;
	stroke-width: 5px;
	width: 20px;
	padding: 5px;
}

.closeIcon:hover {
	background-color: rgba(237, 232, 242, 0.2);
}

.dateRangeWrapper {
	z-index: 2;
}

.filterButtons {
	display: flex;
	flex-direction: row;
	background-color: var(--body-bg-color);
	gap: 8px;
	padding: 8px;
}

.clearButton[type='reset'] {
	border-color: var(--select-border-color);
	border-radius: 6px;
	border-style: solid;
	border-width: 1px;
	background-color: rgba(237, 232, 242, 0.2);
}

.clearButton[type='reset']:hover {
	border-color: hsl(0, 0%, 70%);
}

/* For the following, Use classNames prop of same name. See definition of ClassNames in react-date-range */

.dateDisplayItem input {
	text-transform: uppercase;
	text-align: left;
}

.dateDisplayItem {
	text-transform: uppercase;
	color: hsl(0, 0%, 50%);
	font-size: 100%;
	background-color: var(--select-background);
	min-height: 36px;
	padding-left: 10px;
}

.dateDisplayWrapper {
	color: hsl(0, 0%, 50%);
	font-size: 100%;
	background-color: var(--select-background);
	max-height: 38px;
}

.dateDisplay {
	margin: 0px 8px;
}

.calendarWrapper {
	color: hsl(0, 0%, 50%);
	font-size: 100%;
	background-color: var(--body-bg-color);
}

.monthAndYearPickers select {
	border-color: var(--select-border-color);
	border-radius: 6px;
	border-style: solid;
	border-width: 1px;
	/* background-color: rgba(237, 232, 242, 0.2); */
	color: var(--body-copy-color);
}

.monthAndYearPickers select:hover {
	border-color: hsl(0, 0%, 70%);
}

.dayNumber span {
	color: var(--body-copy-color);
}

.dayPassive > .dayNumber span {
	color: #1d2429;
}

.dayToday > .dayNumber span::after {
	background: var(--primary-color);
}

.dayHovered {
	border-color: var(--primary-color);
}
